class Solution 
{
   public:
    int search(vector<int>& arr, int key) 
    {
        int size=arr.size();
        int low = 0;
	      int high = size - 1;
	      int mid = 0;
	      while (low <= high)
	      {
	        	mid = low + (high - low) / 2;
		        if (arr[mid] == key)
		          	return mid;
		        else if (arr[low] > arr[high])
		        {
		           	if (key < arr[mid] && key <= arr[mid - 1] && arr[mid - 1] < arr[mid + 1])
			              	high = mid - 1;
			          else if (arr[mid] > key && key >= arr[low])
			               	high = mid - 1;
		          	else if (key > arr[mid] && key >= arr[mid + 1] && key < arr[low])
			              	low = mid + 1;
		           	else if (key > arr[mid] && key <= arr[mid - 1])
			              	high = mid - 1;
			          else if (arr[mid] > key && key < arr[low])
			              	low = mid + 1;
			          else
			              	low = mid + 1;
		       }
		       else if (arr[low] <= arr[high])
		       {
		          	if (arr[mid] > key)
				              high = mid - 1;
		          	else
		  		            low = mid + 1;
	       	 }

	     }
	      
       return -1;
    }
   
};
